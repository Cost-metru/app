{"version":3,"sources":["components/Dropdown.js","components/ValueInput.js","components/Selection.js","data/categories.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","props","handleChange","bind","e","this","changeOption","items","target","value","level","onChange","selected","disabled","hidden","map","item","key","item_id","Component","DropdownItem","name","ValueInput","state","changeValue","type","Selection","max_level","options","custom_value","setState","new_option","j","dropdown","console","log","hasOwnProperty","data","rent_names","RO_CJ_COM","RO_CJ_AP1","App","className","category","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0d8d48e4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Dropdown extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e){\r\n        this.props.changeOption(this.props.items[e.target.value],(this.props.level+1));\r\n    }\r\n    render() {\r\n        return (\r\n            <select onChange={this.handleChange}>\r\n                <option value=\"\" selected disabled hidden>Alege ceva</option>\r\n                {this.props.items.map(function(item,key) {return <DropdownItem item={item} item_id={key} key={key}/>})}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nclass DropdownItem extends Component{\r\n    render() {\r\n        return (\r\n            <option value={this.props.item_id}>\r\n                {this.props.item.name}\r\n            </option>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dropdown;","import React, {Component} from 'react';\r\n\r\n\r\nclass ValueInput extends Component{ \r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {value: ''};\r\n    }\r\n    handleChange(e) {\r\n        this.props.changeValue(e.target.value);\r\n    }\r\n    render(){\r\n        const value = this.props.value;\r\n        return(\r\n            <input type=\"number\" value={value} onChange={this.handleChange} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValueInput;","import React, { Component } from 'react';\r\nimport Dropdown from './Dropdown';\r\nimport ValueInput from './ValueInput';\r\nclass Selection extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            max_level:0,\r\n            options:[{value:\"0\"},null,null,null,null],\r\n            value: 0\r\n        }\r\n        this.changeOption = this.changeOption.bind(this);\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n    changeValue(custom_value){\r\n        this.setState({value:custom_value});\r\n    }\r\n    changeOption(new_option,level){\r\n        //console.log(level);\r\n        this.setState(state=>{\r\n            const max_level=level;\r\n            const options= state.options.map((item,j) => {\r\n                if(j === level){\r\n                    return new_option;\r\n                }\r\n                else{\r\n                    return item;\r\n                }\r\n            });\r\n            return {\r\n                max_level,\r\n                options,\r\n            };\r\n        },()=>{this.changeValue(this.state.options[this.state.max_level].value);});\r\n        \r\n    }\r\n    render(){\r\n        //console.log(this.props.data.data);\r\n        let dropdown=[null];\r\n        let level;\r\n        console.log(this.state);\r\n        for(level=1;level<=this.state.max_level;level++){\r\n            if(this.state.options[level]!=null){\r\n                if(this.state.options[level].hasOwnProperty(\"data\")){\r\n                    console.log(1);\r\n                    dropdown[level-1] = <Dropdown items={this.state.options[level].data} changeOption={this.changeOption} level={level}/> ;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return( \r\n        <div>\r\n            <Dropdown items={this.props.data.data} changeOption={this.changeOption} level = {0} />\r\n            {dropdown}\r\n            <ValueInput value={this.state.value} changeValue={this.changeValue}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Selection;","const rent_names={\r\n    COM: \"Camin\",\r\n    AP1: \"Garsoniera\",\r\n    AP2: \"Apartament cu 2 camere\"\r\n}\r\nconst RO_BUC_COM1 = {\r\n    name:\"Complex1\",\r\n    value: 50\r\n}\r\nconst RO_BUC_COM2 = {\r\n    name:\"Complex2\",\r\n    value: 100\r\n}\r\nconst RO_BUC_COM3 = {\r\n    name:\"Complex3\",\r\n    value: 150\r\n}\r\n\r\nconst RO_BUC_COM = {\r\n    name:rent_names.COM,\r\n    data:[\r\n        RO_BUC_COM1,\r\n        RO_BUC_COM2,\r\n        RO_BUC_COM3,\r\n\r\n    ],\r\n    value: 50\r\n}\r\nconst RO_BUC_AP1={\r\n    name:rent_names.AP1,\r\n    value: 500\r\n}\r\nconst RO_BUC_AP2={\r\n    name:rent_names.AP2,\r\n    value: 5000\r\n}\r\nconst RO_BUC ={\r\n    name:\"Bucuresti\",\r\n    data:[\r\n        RO_BUC_COM,\r\n        RO_BUC_AP1,\r\n        RO_BUC_AP2\r\n    ]\r\n};\r\nconst RO_CJ_COM = {\r\n    name:rent_names.COM,\r\n    value: 70\r\n}\r\n\r\nconst RO_CJ_AP1={\r\n    name:rent_names.AP1,\r\n    value: 700\r\n}\r\nconst RO_CJ_AP2={\r\n    name:rent_names.AP2,\r\n    value: 7000\r\n}\r\nconst RO_CJ={\r\n    name:\"Cluj\",\r\n    data:[\r\n        RO_CJ_COM,\r\n        RO_CJ_AP1,\r\n        RO_CJ_AP2\r\n    ]\r\n};\r\nconst RO_BV={\r\n    name:\"Brasov\",\r\n    data:[\r\n        RO_CJ_COM,\r\n        RO_CJ_AP1,\r\n        //RO_CJ_AP2\r\n    ]\r\n}\r\nconst rent={\r\n    name:\"Chirie\",\r\n    data:[\r\n        RO_BUC,\r\n        RO_CJ,\r\n        RO_BV\r\n    ]\r\n    \r\n};\r\n\r\nconst data=[\r\n    rent,\r\n];\r\n\r\nexport{data}","import React, { Component } from 'react';\nimport './App.css';\nimport Selection from './components/Selection';\nimport {data} from './data/categories.js';\nclass App extends Component {\n  \n  render() {\n    return ( \n      <div className = \"App\" >\n        {data.map(function(category,key){\n          return (\n        <Selection data={category} key={key}/>\n        )})}\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}