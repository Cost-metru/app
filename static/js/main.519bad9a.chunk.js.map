{"version":3,"sources":["components/Dropdown.js","components/ValueInput.js","components/Selection.js","components/Category.js","data/names/names.js","data/names/ids.js","data/categories.js","data/living.js","data/living/rent.js","data/living/rent/RO_BUC.js","data/living/rent/RO_BUC/COM.js","data/living/rent/RO_BUC/COM/A.js","data/living/rent/RO_BUC/COM/B.js","data/living/rent/RO_BUC/COM/C.js","data/living/rent/RO_BUC/AP1.js","data/living/rent/RO_BUC/AP1/Z1.js","data/living/rent/RO_BUC/AP1/Z2.js","data/living/rent/RO_BUC/AP1/Z3.js","data/living/rent/RO_BUC/AP2.js","data/living/rent/RO_BV.js","data/living/rent/RO_CJ.js","data/utilities.js","data/utilities/utilities_calc.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","props","state","value","items","handleChange","bind","e","this","changeOption","level","target","setState","onChange","hidden","map","item","key","item_id","Component","DropdownItem","name","ValueInput","changeValue","type","Selection","data","hasOwnProperty","default","values","globalVariables","locality","display_level","option_keys","updateCheck","custom_value","global","data_distributer","new_globalVariables","j","id","changeSelection","new_key","level_id","console","log","expectedValue","outputValue","selection_id","value_exp","dropdown","auto_value","auto_values","update","undefined","item_key","default_multiplier","residence_type","multipliers","Category","proto","selection_meta","setGlobalVariables","category","selection","costs","setOutputValues","category_id","rent_names","rent_ids","App","values_arr","getGlobalVariables","getOutputValues","new_state","new_locality","new_residence_type","categories","disp_buff_values","index","chart_data","parseInt","className","width","height","chartType","loader","rootProps","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.519bad9a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Dropdown extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={value:props.value,props:props.items};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e){\r\n        if(this.props.value!==''){\r\n        this.props.changeOption((this.props.level+1),this.props.value)\r\n        //console.log(this.state.value)\r\n        }\r\n        else\r\n        this.props.changeOption((this.props.level+1),e.target.value);\r\n        this.setState({value:e.target.value});\r\n    }\r\n    static getDerivedStateFromProps(props,state){\r\n        if(props.items!==state.props) return{value:props.value,props:props.items};\r\n        return{};\r\n    }\r\n    render() {\r\n        return (\r\n            <select onChange={this.handleChange} value={this.state.value} hidden={this.props.hidden===\"1\" && \"hidden\"}>\r\n                <option value='' hidden=\"hidden\">Alege ceva</option>\r\n                {this.props.items.map(function(item,key) {\r\n                    return <DropdownItem item={item} item_id={key} key={key}/>\r\n                })\r\n                }\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nclass DropdownItem extends Component{\r\n    render() {\r\n        return (\r\n            <option value={this.props.item_id}>\r\n                {this.props.item.name}\r\n            </option>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dropdown;","import React, {Component} from 'react';\r\n\r\n\r\nclass ValueInput extends Component{ \r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {value: this.props.value};\r\n    }\r\n    handleChange(e) {\r\n        this.props.changeValue(e.target.value);\r\n    }\r\n\r\n    render(){\r\n        const value = this.props.value;\r\n        return(\r\n            <input type=\"number\" value={value} onChange={this.handleChange} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValueInput;","import React, { Component } from 'react';\r\nimport Dropdown from './Dropdown';\r\nimport ValueInput from './ValueInput';\r\nclass Selection extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        let value = 0;\r\n        if(this.props.data.hasOwnProperty(\"value\")) value=this.props.data.value;\r\n        if((!this.props.data.hasOwnProperty(\"data\"))&&this.props.data.hasOwnProperty(\"default\")){\r\n            if(!this.props.data.default===\"locality\") value=this.props.data.values[this.props.globalVariables.locality];\r\n        }\r\n        this.state={\r\n            display_level:0,\r\n            globalVariables: this.props.globalVariables,\r\n            option_keys:[0,0,0,0,0,0,0,0,],\r\n            value: value,\r\n            updateCheck: true\r\n        }\r\n        this.changeOption = this.changeOption.bind(this);\r\n        this.changeValue = this.changeValue.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    changeValue(custom_value){\r\n        this.setState({value:custom_value},()=>{/*console.log(this.state.value)*/});\r\n    }\r\n    \r\n    handleChange(e){\r\n        if(this.props.data.hasOwnProperty(\"global\")){\r\n            if(this.props.data.global===1){\r\n                let data_distributer= this.props.data;\r\n                const new_globalVariables= this.state.option_keys.map((key,j) => {\r\n                    if(data_distributer.hasOwnProperty(\"data\")&&key!==null){\r\n                        data_distributer=data_distributer.data[key];\r\n                        if(data_distributer.hasOwnProperty(\"id\"))\r\n                            return data_distributer.id;\r\n                    }\r\n                    return null;\r\n                });\r\n                this.props.changeSelection(new_globalVariables);\r\n            }\r\n        }\r\n        //this.setState({value:this.state.value_exp});\r\n    }\r\n\r\n    changeOption(level,new_key){\r\n        this.setState(state=>{\r\n            const display_level=level;\r\n            let value;\r\n            let level_id;\r\n            let data_distributer= this.props.data;\r\n            for(level_id=0;level_id<=display_level-2;level_id++){\r\n                if(data_distributer.hasOwnProperty(\"data\")){\r\n                    data_distributer=data_distributer.data[this.state.option_keys[level_id]];\r\n                }\r\n            }\r\n            if(data_distributer.hasOwnProperty(\"data\"))\r\n                data_distributer=data_distributer.data[new_key];\r\n            else console.log(\"ERROR!\");\r\n            if(data_distributer.hasOwnProperty(\"value\"))\r\n                value=data_distributer.value;\r\n            this.changeValue(value);\r\n            const option_keys= state.option_keys.map((key,j) => {\r\n                if(j === level-1)return new_key;\r\n                else{\r\n                    if(j<level-1)\r\n                        return key;\r\n                    else\r\n                        return null;\r\n                }\r\n            });\r\n            return {\r\n                display_level,\r\n                option_keys\r\n            };\r\n        },()=>{\r\n            this.handleChange();\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(props,state){\r\n        let value=state.value;\r\n        let update = false;\r\n        if(props.globalVariables!==state.globalVariables){\r\n            if(props.data.hasOwnProperty(\"values\") && props.data.hasOwnProperty(\"default\")){\r\n                if(props.data.default===\"locality\"&&props.globalVariables.locality!==undefined){\r\n                    let locality = props.globalVariables.locality;\r\n                    let key=0;\r\n                    for(const item_key in props.data.values) if(props.data.values[item_key].name===locality) key=item_key;\r\n                    value=props.data.values[key].value;\r\n                }\r\n                if(props.data.hasOwnProperty(\"multipliers\") && props.data.hasOwnProperty(\"default_multiplier\")){\r\n                    if(props.data.default_multiplier===\"residence_type\" && props.globalVariables.residence_type!==undefined){\r\n                        let residence_type = props.globalVariables.residence_type;\r\n                        let key=0;\r\n                        for(const item_key in props.data.multipliers) if(props.data.multipliers[item_key].type===residence_type) key=item_key;\r\n                        value=value*props.data.multipliers[key].value;\r\n                    }\r\n                }\r\n            }\r\n            if(value!==state.value){\r\n                update=true;\r\n            }\r\n        }\r\n        return{value_exp:value,globalVariables:props.globalVariables, updateCheck:update};\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.expectedValue!==this.state.value)\r\n        this.props.outputValue(this.state.value,this.props.data.name,this.props.selection_id);\r\n        if(this.state.value_exp!==this.state.value && this.state.updateCheck===true){\r\n            //console.log(1);\r\n             this.changeValue(this.state.value_exp);\r\n             this.setState({updateCheck:false})\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        let dropdown=[null];\r\n        let level;\r\n        let data_distributer= this.props.data;\r\n        \r\n        for(level=0;level<=this.state.display_level;level++){\r\n            if(data_distributer.hasOwnProperty(\"data\")){\r\n                let hidden=0;\r\n                let auto_value=this.props.auto_values;\r\n                if(data_distributer.hasOwnProperty(\"type\")) if(data_distributer.type===\"hidden\") hidden=\"1\";\r\n                dropdown[level] = <Dropdown hidden={hidden} value={auto_value} items={data_distributer.data} changeOption={this.changeOption} level={level} globalVariables={this.props.globalVariables} key={level}/> ;\r\n                data_distributer=data_distributer.data[this.state.option_keys[level]];\r\n            }\r\n        }\r\n        \r\n        return( \r\n        <div>\r\n            <h2>{this.props.data.name}</h2>\r\n            {dropdown}\r\n            <ValueInput value={this.state.value} changeValue={this.changeValue}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Selection;","import React, { Component } from 'react';\r\nimport Selection from './Selection'\r\n\r\nclass Category extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.changeSelection = this.changeSelection.bind(this);\r\n        this.outputValue = this.outputValue.bind(this);\r\n        let proto ={value:null,name:null};\r\n        this.state = {values:[proto,proto,proto,proto,proto,proto,proto,proto,proto,]}\r\n    }\r\n\r\n    changeSelection(selection_meta){\r\n        //this.setState({selection:selection_meta});\r\n        this.props.setGlobalVariables({\r\n            name:this.props.category.name,\r\n            selection:selection_meta\r\n        });\r\n    }\r\n\r\n    outputValue(value,name,new_key){\r\n        const values = this.props.category.costs.map((item,key) =>{\r\n                if(new_key===key)\r\n                    return {value:value,name:name};\r\n                return this.state.values[key];\r\n            }\r\n        )\r\n        this.setState({values:values});\r\n        this.props.setOutputValues(values, this.props.category.name, this.props.category_id);\r\n        //console.log(1);\r\n    }\r\n\r\n\r\n    render(){\r\n        let selection;\r\n        let auto_values='';\r\n        //console.log(this.state);\r\n        selection = this.props.category.costs.map((selection,key) =>\r\n            <Selection expectedValue={this.state.values[key].value} globalVariables={this.props.globalVariables} auto_values={auto_values} data={selection} selection_id={key} key={key} changeSelection={this.changeSelection} outputValue={this.outputValue}/>);\r\n        return(\r\n        <div>\r\n            <h1>{this.props.category.name}</h1>\r\n            {selection}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category","const rent_names={\r\n    COM: \"Camin\",\r\n    AP1: \"Garsoniera\",\r\n    AP2: \"Apartament cu 2 camere\"\r\n}\r\n\r\nexport  {rent_names}","const rent_ids={\r\n    COM: \"COM\",\r\n    AP1: \"AP1\",\r\n    AP2: \"AP2\"\r\n}\r\n\r\nexport  {rent_ids}","import {living} from './living.js'\r\nimport {utilities} from './utilities.js'\r\n\r\nconst data=[\r\n    living,\r\n    utilities,\r\n];\r\n\r\nexport{data}","import {rent} from './living/rent.js'\r\n\r\nconst living = {\r\n    name:\"Cazare\",\r\n    costs:[\r\n        rent,\r\n    ]\r\n}\r\n\r\nexport {living}","import {RO_BUC} from './rent/RO_BUC.js'\r\nimport {RO_BV} from './rent/RO_BV.js'\r\nimport {RO_CJ} from './rent/RO_CJ.js'\r\n\r\nconst rent={\r\n    name:\"Chirie\",\r\n    data:[\r\n        RO_BUC,\r\n        RO_BV,\r\n        RO_CJ,\r\n    ],\r\n    global:1\r\n    \r\n};\r\n\r\nexport{rent};","//import {rent_names} from '../names/names.js'\r\nimport {COM} from './RO_BUC/COM.js'\r\nimport {AP1} from './RO_BUC/AP1.js'\r\nimport {AP2} from './RO_BUC/AP2.js'\r\n\r\nconst RO_BUC ={\r\n    name:\"Bucuresti\",\r\n    id:\"RO_BUC\",\r\n    data:[\r\n        COM,\r\n        AP1,\r\n        AP2\r\n    ],\r\n    value:1000\r\n};\r\nexport {RO_BUC};","import {rent_names} from '../../../names/names.js'\r\nimport {rent_ids} from '../../../names/ids.js'\r\nimport {A} from './COM/A.js'\r\nimport {B} from './COM/B.js'\r\nimport {C} from './COM/C.js'\r\n\r\nconst COM = {\r\n    name:rent_names.COM,\r\n    id:rent_ids.COM,\r\n    data:[\r\n        A,\r\n        B,\r\n        C,\r\n\r\n    ],\r\n    value: 70\r\n}\r\nexport {COM};","const A = {\r\n    name:\"Complex A\",\r\n    value: 50\r\n}\r\nexport{A}","const B = {\r\n    name:\"Complex B\",\r\n    value: 100\r\n}\r\nexport{B}","const C = {\r\n    name:\"Complex C\",\r\n    value: 150\r\n}\r\nexport{C}","import {rent_names} from '../../../names/names.js'\r\nimport {rent_ids} from '../../../names/ids.js'\r\nimport {Z1} from './AP1/Z1.js'\r\nimport {Z2} from './AP1/Z2.js'\r\nimport {Z3} from './AP1/Z3.js'\r\n\r\nconst AP1={\r\n    name:rent_names.AP1,\r\n    id:rent_ids.AP1,\r\n    data:[\r\n        Z1,\r\n        Z2,\r\n        Z3,\r\n    ],\r\n    value: 500\r\n}\r\nexport{AP1}","const Z1 = {\r\n    name:\"Zona 1\",\r\n    value: 1000\r\n}\r\nexport{Z1}","const Z2 = {\r\n    name:\"Zona 2\",\r\n    value: 1500\r\n}\r\nexport{Z2}","const Z3 = {\r\n    name:\"Zona 3\",\r\n    value: 2000\r\n}\r\nexport{Z3}","import {rent_names} from '../../../names/names.js'\r\nimport {rent_ids} from '../../../names/ids.js'\r\n\r\nconst AP2={\r\n    id:rent_ids.AP2,\r\n    name:rent_names.AP2,\r\n    value: 5000\r\n}\r\nexport {AP2}","import {rent_names} from '../../names/names.js'\r\nimport {rent_ids} from '../../names/ids.js'\r\n\r\nconst RO_BV_COM = {\r\n    name:rent_names.COM,\r\n    id:rent_ids.COM,\r\n    value: 70\r\n}\r\n\r\nconst RO_BV_AP1={\r\n    name:rent_names.AP1,\r\n    id:rent_ids.AP1,\r\n    value: 700\r\n}\r\n\r\nconst RO_BV={\r\n    name:\"Brasov\",\r\n    id:\"RO_BV\",\r\n    data:[\r\n        RO_BV_COM,\r\n        RO_BV_AP1,\r\n        //RO_CJ_AP2\r\n    ]\r\n}\r\nexport {RO_BV};","import {rent_names} from '../../names/names.js'\r\nimport {rent_ids} from '../../names/ids.js'\r\n\r\nconst RO_CJ_COM = {\r\n    name:rent_names.COM,   \r\n     id:rent_ids.COM,\r\n    value: 70\r\n}\r\n\r\nconst RO_CJ_AP1={\r\n    name:rent_names.AP1,\r\n    id:rent_ids.AP1,\r\n    value: 700\r\n}\r\nconst RO_CJ_AP2={\r\n    name:rent_names.AP2,\r\n    id:rent_ids.AP2,\r\n    value: 7000\r\n}\r\nconst RO_CJ={\r\n    name:\"Cluj\",\r\n    id:\"RO_CJ\",\r\n    data:[\r\n        RO_CJ_COM,\r\n        RO_CJ_AP1,\r\n        RO_CJ_AP2\r\n    ]\r\n};\r\nexport{RO_CJ};","import {utilities_calc} from './utilities/utilities_calc.js'\r\n\r\nconst utilities={\r\n    name:\"Utilitati\",\r\n    costs:[\r\n        utilities_calc\r\n    ]\r\n}\r\n\r\nexport {utilities}","const utilities_calc={\r\n    name:\"Utilitati\",\r\n    type:\"hidden\",\r\n    default:\"locality\",\r\n    values:[\r\n        {\r\n            name:\"RO_BUC\",\r\n            value:230\r\n        },{\r\n            name:\"RO_BV\",\r\n            value:200\r\n        },{\r\n            name:\"RO_CJ\",\r\n            value:260\r\n\r\n        },\r\n    ],\r\n    default_multiplier:\"residence_type\",\r\n    multipliers:[\r\n        {\r\n            type:\"COM\",\r\n            value: 0\r\n        },{\r\n            type:\"AP1\",\r\n            value: 1\r\n        },{\r\n            type:\"AP2\",\r\n            value: 1.5\r\n        },\r\n    ],\r\n    //value:10\r\n}\r\nexport {utilities_calc}","import React, { Component } from 'react';\nimport { Chart } from \"react-google-charts\";\nimport './App.css';\nimport Category from './components/Category';\nimport {data} from './data/categories.js';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    let proto ={value:null,name:null};\n    let values={values:[proto,proto,proto,proto,proto,proto,proto,proto,proto,], name:null}\n    this.state = {\n      globalVariables:{\n        locality:\"\",\n        residence_type:\"\"\n      },\n      values_arr:[values,values,values,values,values,values,values,values,values,values,values,values,values,values,]\n    }\n    this.getGlobalVariables = this.getGlobalVariables.bind(this);\n    this.getOutputValues = this.getOutputValues.bind(this);\n  }\n\n  getGlobalVariables(new_state){\n    let new_locality;\n    let new_residence_type;\n    if(new_state.name===\"Cazare\"){\n      if(new_state.selection[0]!==undefined)\n        new_locality = new_state.selection[0];\n      if(new_state.selection[1]!==undefined)\n        new_residence_type = new_state.selection[1];\n    }\n    this.setState({\n      globalVariables:{\n        locality:new_locality,\n        residence_type:new_residence_type\n      }\n    })\n  }\n\n  getOutputValues(values,name,new_key){\n    const values_arr = data.map((item,key) =>{\n      if(new_key===key)\n        return {values:values,name:name};\n      return this.state.values_arr[key];\n    })\n    this.setState({values_arr:values_arr});\n    //console.log(values_arr);\n  }\n\n  render() {\n    console.log(this.state);\n    let categories;\n    categories = data.map((category,key) =>\n      <Category globalVariables={this.state.globalVariables} category_id={key} category={category} key={key} setGlobalVariables={this.getGlobalVariables} setOutputValues={this.getOutputValues}/>\n    );\n    let disp_buff_values=[null];\n    let index=0;\n    let chart_data = [['From', 'To', 'Weight']];\n    for(const values of this.state.values_arr){\n      for(const value of values.values){\n        if(value.name!==null){\n          disp_buff_values[index]= <div key={index}><h3>{value.name}:{value.value}</h3>{\"\\n\"}</div>;\n          chart_data[index+1]=['Banet', value.name,parseInt(value.value,10)];\n          index++;\n        }\n      }\n    }\n    console.log(chart_data);\n    return ( \n\n      <div className = \"App\" >\n        <Chart\n          width={600}\n          height={'300px'}\n          chartType=\"Sankey\"\n          loader={<div>Loading Chart</div>}\n          data={chart_data} //{[\n          //   ['From', 'To', 'Weight'],\n          //   ['A', 'X', 5],\n          //   ['A', 'Y', 7],\n          //   ['A', 'Z', 6],\n          //   ['B', 'X', 2],\n          //   ['B', 'Y', 9],\n          //   ['B', 'Z', 4],\n          // ]}\n          rootProps={{ 'data-testid': '1' }}\n        />\n        {disp_buff_values}\n        {categories}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}